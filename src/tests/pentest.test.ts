import request from 'supertest';
import app from '../app';

describe('BASIC PENETRATION TESTS', () => {
  // Test unauthenticated access to admin route
  it('should deny access to /admin/users when unauthenticated', async () => {
    const res = await request(app).get('/admin/users');
    expect([401, 403]).toContain(res.status);
  });

  // Simple SQL injection attempt on login
  it('should not allow SQL injection via login password field', async () => {
    const res = await request(app).post('/auth/login').send({
      email: 'filip.smet@medecare.be',
      password: "' OR '1'='1",
    });
    expect([401, 400]).toContain(res.status);
  });

  // Check for informational header leakage
  it('should not expose the X-Powered-By header', async () => {
    const res = await request(app).get('/');
    expect(res.headers['x-powered-by']).toBeUndefined();
  });
});
